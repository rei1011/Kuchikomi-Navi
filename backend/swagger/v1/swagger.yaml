---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/comments":
    get:
      summary: Get Comments
      tags:
      - Comments
      responses:
        '200':
          description: comment found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    store_name:
                      type: string
                    prostutite_name:
                      type: string
                    comment:
                      type: string
                    publication_date:
                      type: date
                  required:
                  - id
                  - store_name
                  - prostutite_name
                  - comment
                  - publication_date
  "/comparison_report":
    get:
      summary: Get Comparison Report
      tags:
      - Comparison Report
      parameters:
      - name: stores
        in: query
        items:
          type: string
        required: true
        schema:
          type: array
      - name: message
        in: query
        required: true
        schema:
          type: string
      - name: room_id
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Comparison Report found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties: false
                  properties:
                    id:
                      type: integer
                    value:
                      type: string
                    role:
                      type: string
                      enum:
                      - user
                      - assistant
                  required:
                  - id
                  - value
                  - role
  "/rooms":
    get:
      summary: Get Rooms
      tags:
      - Rooms
      responses:
        '200':
          description: room list
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  list:
                    type: array
                    items:
                      type: object
                      additionalProperties: false
                      properties:
                        id:
                          type: number
                        user_id:
                          type: number
                        name:
                          type: string
                          nullable: true
                        created_at:
                          type: string
                        updated_at:
                          type: string
                        store1_id:
                          type: number
                          nullable: true
                        store2_id:
                          type: number
                          nullable: true
                      required:
                      - id
                      - user_id
                      - name
                      - created_at
                      - updated_at
                      - store1_id
                      - store2_id
                required:
                - list
    post:
      summary: Create Room
      tags:
      - Rooms
      parameters: []
      responses:
        '200':
          description: room created
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  id:
                    type: number
                required:
                - id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                user_id:
                  type: number
              required:
              - user_id
        required: true
  "/rooms/{room_id}":
    get:
      summary: Get Room
      tags:
      - Rooms
      parameters:
      - name: room_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: room found
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  id:
                    type: number
                  name:
                    type: string
                    nullable: true
                  store1:
                    type: object
                    additionalProperties: false
                    properties:
                      id:
                        type: number
                      name:
                        type: string
                    required:
                    - id
                    - name
                  store2:
                    type: object
                    additionalProperties: false
                    properties:
                      id:
                        type: number
                      name:
                        type: string
                    required:
                    - id
                    - name
                required:
                - id
                - name
    patch:
      summary: Update Room
      tags:
      - Rooms
      parameters:
      - name: room_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: room updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  nullable: true
                store1_id:
                  type: number
                  nullable: true
                store2_id:
                  type: number
                  nullable: true
              required:
              - name
              - store1_id
              - store2_id
        required: true
    delete:
      summary: Delete Room
      tags:
      - Rooms
      parameters:
      - name: room_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: room updated
  "/stores":
    get:
      summary: Get Stores
      tags:
      - Stores
      parameters:
      - name: keyword
        in: query
        schema:
          type: string
      responses:
        '200':
          description: store found
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        store_name:
                          type: string
                        address:
                          type: object
                          properties:
                            prefecture:
                              type: string
                            municipality:
                              type: string
                          required:
                          - prefecture
                          - municipality
                        home_page:
                          type: string
                        store_image:
                          type: string
                        open:
                          type: object
                          properties:
                            from:
                              type: string
                              pattern: "(?-mix:^(?:[01]\\d|2[0-3]):[0-5]\\d$)"
                            to:
                              type: string
                              pattern: "(?-mix:^(?:[01]\\d|2[0-3]):[0-5]\\d$)"
                      required:
                      - id
                      - store_name
                      - address
                      - home_page
                      - open
                required:
                - list
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
