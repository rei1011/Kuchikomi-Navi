FROM node:22-alpine AS base

FROM base AS deps
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable
RUN apk add --no-cache libc6-compat
WORKDIR /app
COPY package.json pnpm-lock* ./
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile


FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .
RUN pnpm build


FROM base AS runner
WORKDIR /app
ENV NODE_ENV production
ARG BASIC_AUTH_USER
ARG BASIC_AUTH_PASSWORD
ENV BASIC_AUTH_USER=${BASIC_AUTH_USER}
ENV BASIC_AUTH_PASSWORD=${BASIC_AUTH_PASSWORD}
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs
COPY --from=builder /app/public ./public
RUN mkdir .next
RUN chown nextjs:nodejs .next
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static
USER nextjs
# Cloud RunのContainer上の環境変数として、PORTが定義されているためDockerfileでPORTの指定は不要
CMD HOSTNAME="0.0.0.0" node server.js