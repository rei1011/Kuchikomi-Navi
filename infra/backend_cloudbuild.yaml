steps:
  - name: "gcr.io/cloud-builders/docker"
    args: 
      [
        "build",
        "--tag",
        "${_ARTIFACT_REPOSITORY_IMAGE_NAME}:${SHORT_SHA}",
        "--tag",
        "${_ARTIFACT_REPOSITORY_IMAGE_NAME}:latest",
        "--build-arg",
        "MASTER_KEY=$$RAILS_KEY",
        "--build-arg",
        "DATABASE_NAME=${_DATABASE_NAME}",
        "--build-arg",
        "DATABASE_USER=${_DATABASE_USER}",
        "--build-arg",
        "DATABASE_SOCKET=${_DATABASE_SOCKET}",
        "--file",
        "Dockerfile.prod",
        "--cache-from",
        "${_ARTIFACT_REPOSITORY_IMAGE_NAME}:latest",
        "."
      ]
    dir: "backend"
    secretEnv: ["RAILS_KEY"]
  - name: "gcr.io/cloud-builders/docker"
    args: 
      [
        "push",
        "--all-tags",
        "$_ARTIFACT_REPOSITORY_IMAGE_NAME"
      ]
    dir: "backend"
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: 
      [
        "run",
        "deploy",
        "backend-app",
        "--platform",
        "managed",
        "--image",
        "$_ARTIFACT_REPOSITORY_IMAGE_NAME:$SHORT_SHA",
        "--region" ,
        "$_REGION",
        "--allow-unauthenticated"
      ]
    dir: "backend"

substitutions:
  _REGION: by-terraform
  _DATABASE_NAME: by-terraform
  _DATABASE_USER: by-terraform
  _DATABASE_SOCKET: by-terraform
  _ARTIFACT_REPOSITORY_IMAGE_NAME: by-terraform
  _SECRET_NAME: by-terraform

availableSecrets:
  secretManager:
  - versionName: projects/${PROJECT_ID}/secrets/${_SECRET_NAME}/versions/latest
    env: RAILS_KEY